// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"context"
	"database/sql"
)

type Querier interface {
	CountEntitiesByType(ctx context.Context, arg CountEntitiesByTypeParams) (int64, error)
	// Annotations CRUD operations
	CreateAnnotation(ctx context.Context, arg CreateAnnotationParams) (Annotation, error)
	// Entities CRUD operations
	CreateEntity(ctx context.Context, arg CreateEntityParams) (Entity, error)
	// Graph versions CRUD operations
	CreateGraphVersion(ctx context.Context, arg CreateGraphVersionParams) (GraphVersion, error)
	// Projects CRUD operations
	CreateProject(ctx context.Context, arg CreateProjectParams) (Project, error)
	// Relationships CRUD operations
	CreateRelationship(ctx context.Context, arg CreateRelationshipParams) (Relationship, error)
	CreateScene(ctx context.Context, arg CreateSceneParams) (Scene, error)
	DeleteAnnotation(ctx context.Context, id string) error
	DeleteAnnotationsByEntity(ctx context.Context, entityID string) error
	DeleteEntity(ctx context.Context, id string) error
	DeleteGraphVersion(ctx context.Context, id string) error
	DeleteProject(ctx context.Context, id string) error
	DeleteRelationship(ctx context.Context, id string) error
	DeleteRelationshipsByEntity(ctx context.Context, arg DeleteRelationshipsByEntityParams) error
	DeleteScene(ctx context.Context, id string) error
	GetAnnotation(ctx context.Context, id string) (Annotation, error)
	GetEntity(ctx context.Context, id string) (Entity, error)
	GetGraphVersion(ctx context.Context, id string) (GraphVersion, error)
	GetProject(ctx context.Context, id string) (Project, error)
	GetRelationship(ctx context.Context, id string) (Relationship, error)
	GetRelationshipsBetweenEntities(ctx context.Context, arg GetRelationshipsBetweenEntitiesParams) ([]Relationship, error)
	GetScene(ctx context.Context, id string) (Scene, error)
	GetWorkingSetVersion(ctx context.Context, projectID string) (GraphVersion, error)
	ListAnnotationsByAgent(ctx context.Context, agentName sql.NullString) ([]Annotation, error)
	ListAnnotationsByEntity(ctx context.Context, entityID string) ([]Annotation, error)
	ListAnnotationsByType(ctx context.Context, arg ListAnnotationsByTypeParams) ([]Annotation, error)
	ListEntitiesByType(ctx context.Context, arg ListEntitiesByTypeParams) ([]Entity, error)
	ListEntitiesByVersion(ctx context.Context, versionID string) ([]Entity, error)
	ListGraphVersionsByProject(ctx context.Context, projectID string) ([]GraphVersion, error)
	ListProjects(ctx context.Context) ([]Project, error)
	ListRelationshipsByEntity(ctx context.Context, arg ListRelationshipsByEntityParams) ([]Relationship, error)
	ListRelationshipsByType(ctx context.Context, arg ListRelationshipsByTypeParams) ([]Relationship, error)
	ListRelationshipsByVersion(ctx context.Context, versionID string) ([]Relationship, error)
	ListScenes(ctx context.Context) ([]Scene, error)
	SetWorkingSet(ctx context.Context, arg SetWorkingSetParams) error
	UpdateAnnotation(ctx context.Context, arg UpdateAnnotationParams) (Annotation, error)
	UpdateEntity(ctx context.Context, arg UpdateEntityParams) (Entity, error)
	UpdateGraphVersion(ctx context.Context, arg UpdateGraphVersionParams) (GraphVersion, error)
	UpdateProject(ctx context.Context, arg UpdateProjectParams) (Project, error)
	UpdateRelationship(ctx context.Context, arg UpdateRelationshipParams) (Relationship, error)
	UpdateScene(ctx context.Context, arg UpdateSceneParams) (Scene, error)
}

var _ Querier = (*Queries)(nil)
