name: CI

on:
  pull_request:
  push:
    branches:
      - '**'

jobs:
  bazel-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v3
      - name: Show Bazel version
        run: bazel version
      - name: Build all targets
        run: bazel build //...

  schemas:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Validate JSON Schemas
        run: echo "(deprecated)"

  buf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up buf (with token if available to avoid rate limits)
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint protos
        run: buf lint
      - name: Generate code
        run: buf generate
      - name: Check generated code is up-to-date
        run: |
          git status --porcelain
          test -z "$(git status --porcelain)" || (echo "Generated code out of date. Run 'buf generate' and commit changes." && exit 1)
        # Note: ajv returns non-zero if no data is provided; we allow it to pass for schema-only validation.

  bazel-test:
    runs-on: ubuntu-latest
    needs: bazel-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v3
      - name: Show Bazel version
        run: bazel version
      - name: Test all targets
        run: bazel test //... --test_output=errors

